<c:BackdropWindow
	x:Class="OtomadHelper.WPF.Controls.ContentDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:OtomadHelper.WPF.Controls"
	xmlns:common="clr-namespace:OtomadHelper.WPF.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Width="800"
	BorderBrush="{DynamicResource CardStroke}"
	BorderThickness="1"
	ResizeMode="NoResize"
	ShowInTaskbar="True"
	SizeToContent="Height"
	TitleBarType="WindowChrome"
	WindowStartupLocation="CenterScreen"
	mc:Ignorable="d"
	>
	<c:BackdropWindow.DataContext>
		<c:ContentDialogViewModel x:Name="ViewModel" />
	</c:BackdropWindow.DataContext>

	<c:BackdropWindow.Resources>
		<c:ContentDialogIconNameToSymbolConverter x:Key="IconNameToSymbol" />
		<c:ContentDialogIconNameToImageSourceConverter x:Key="IconNameToImageSource" />

		<Style TargetType="TextBlock">
			<Setter Property="TextWrapping" Value="Wrap" />
			<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
		</Style>
		<Style
			x:Key="Title"
			BasedOn="{StaticResource {x:Type TextBlock}}"
			TargetType="TextBlock"
			>
			<Setter Property="FontSize" Value="20" />
			<Setter Property="FontWeight" Value="SemiBold" />
		</Style>
		<Style
			x:Key="Body"
			BasedOn="{StaticResource {x:Type TextBlock}}"
			TargetType="TextBlock"
			>
			<Setter Property="FontSize" Value="14" />
			<Setter Property="Margin" Value="0,12,0,0" />
		</Style>

		<Style x:Key="ContentWrapper" TargetType="Border">
			<Setter Property="Padding" Value="24" />
		</Style>
		<Style x:Key="ButtonsContainer" TargetType="Border">
			<Setter Property="Padding" Value="24" />
			<Setter Property="BorderBrush" Value="{DynamicResource CardStroke}" />
			<Setter Property="BorderThickness" Value="0,2,0,0" />
			<Setter Property="Background" Value="{DynamicResource SurfaceOverlayBackground}" />
		</Style>
		<Style TargetType="Button">
			<Setter Property="Height" Value="32" />
		</Style>

		<Style x:Key="ShadingIcon" TargetType="TextBlock">
			<Setter Property="FontFamily" Value="pack://application:,,,/OtomadHelper;component/Resources/#Segoe Fluent Icons" />
			<!--<Setter Property="FontFamily" Value="Segoe Fluent Icons, Segoe MDL2 Assets, Segoe UI Symbol" />-->
			<Setter Property="FontSize" Value="96" />
			<Setter Property="Canvas.Left" Value="-15" />
			<Setter Property="Canvas.Top" Value="-20" />
			<Setter Property="Foreground">
				<Setter.Value>
					<SolidColorBrush Opacity="0.2" Color="{DynamicResource ForegroundColor}" />
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<EventTrigger RoutedEvent="Loaded">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetProperty="Opacity"
								From="0"
								To="1"
								Duration="00:00:02"
								>
								<DoubleAnimation.EasingFunction>
									<CubicEase EasingMode="EaseInOut" />
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
		</Style>
	</c:BackdropWindow.Resources>

	<c:BackdropWindow.Title>
		<Binding Path="Title" />
	</c:BackdropWindow.Title>
	<c:BackdropWindow.Icon>
		<Binding Path="IconName" Converter="{StaticResource IconNameToImageSource}" />
	</c:BackdropWindow.Icon>

	<Grid>
		<Canvas>
			<TextBlock Style="{StaticResource ShadingIcon}" Text="{Binding IconName, Converter={StaticResource IconNameToSymbol}}" />
		</Canvas>
		<StackPanel Orientation="Vertical">
			<Border Style="{StaticResource ContentWrapper}">
				<StackPanel Orientation="Vertical">
					<TextBlock Style="{StaticResource Title}" Text="{Binding Title}" />
					<TextBlock Style="{StaticResource Body}" Text="{Binding Body}" />
				</StackPanel>
			</Border>
			<Border Style="{StaticResource ButtonsContainer}">
				<ItemsControl ItemsSource="{Binding Buttons}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<c:ContentDialogButtonPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<c:Button
								Content="{Binding Text}"
								DialogResult="{Binding DialogResult}"
								IsDefault="{Binding IsDefault}"
								Command="{Binding ClickButtonCommand, ElementName=ViewModel}"
								CommandParameter="{Binding DialogResult}">
							</c:Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</StackPanel>
	</Grid>
</c:BackdropWindow>
