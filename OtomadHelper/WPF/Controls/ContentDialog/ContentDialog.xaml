<c:BackdropWindow
	x:Class="OtomadHelper.WPF.Controls.ContentDialog"
	x:Name="View"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:OtomadHelper.WPF.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:m="clr-namespace:OtomadHelper.WPF.Common"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Width="800"
	ResizeMode="NoResize"
	ShowInTaskbar="True"
	SizeToContent="Height"
	TitleBarType="WindowChrome"
	WindowStartupLocation="CenterScreen"
	mc:Ignorable="d"
	>
	<c:BackdropWindow.DataContext>
		<c:ContentDialogViewModel x:Name="ViewModel" />
	</c:BackdropWindow.DataContext>

	<c:BackdropWindow.Resources>
		<ResourceDictionary>
			<c:IconNameToImageSourceConverter x:Key="IconNameToImageSource" />
			<m:BooleanToVisibilityConverter x:Key="BoolToVis" />
			<m:BooleanToVisibilityConverter
				x:Key="BoolToInvertVis"
				True="Collapsed"
				False="Visible"
				/>
			<m:BooleanInversionConverter x:Key="BoolInversion" />

			<Thickness x:Key="BodyMargin">0,12,0,0</Thickness>

			<Style TargetType="TextBlock">
				<Setter Property="TextWrapping" Value="Wrap" />
				<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
			</Style>
			<Style
				x:Key="Subtitle"
				BasedOn="{StaticResource {x:Type TextBlock}}"
				TargetType="TextBlock"
				>
				<Setter Property="TextWrapping" Value="NoWrap" />
				<Setter Property="Margin" Value="0,-10,0,4" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding Subtitle}" Value="">
						<Setter Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style
				x:Key="Title"
				BasedOn="{StaticResource {x:Type TextBlock}}"
				TargetType="TextBlock"
				>
				<Setter Property="FontSize" Value="20" />
				<Setter Property="FontWeight" Value="SemiBold" />
			</Style>
			<Style
				x:Key="Body"
				BasedOn="{StaticResource {x:Type TextBlock}}"
				TargetType="TextBlock"
				>
				<Setter Property="FontSize" Value="14" />
				<Setter Property="Margin" Value="{StaticResource BodyMargin}" />
			</Style>
			<Style x:Key="CopyableBody" TargetType="TextBox">
				<Setter Property="TextWrapping" Value="Wrap" />
				<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
				<Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}" />
				<Setter Property="IsReadOnly" Value="True" />
				<Setter Property="MaxHeight" Value="450" />
				<Setter Property="FontSize" Value="14" />
				<Setter Property="AcceptsReturn" Value="True" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="Margin" Value="{StaticResource BodyMargin}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Padding" Value="-2,0" />
				<Setter Property="SelectionBrush" Value="{Binding WindowGlassBrush, ElementName=View}" />
				<Setter Property="SelectionTextBrush" Value="{DynamicResource TextOnAccentForegroundBrush}" />
				<Setter Property="FontFamily" Value="{StaticResource MonoFont}" />
			</Style>
			<Style x:Key="ContentWrapper" TargetType="Border">
				<Setter Property="Padding" Value="24" />
			</Style>
			<Style x:Key="ButtonsContainer" TargetType="Border">
				<Setter Property="Padding" Value="24,20" />
				<Setter Property="BorderBrush" Value="{DynamicResource CardStroke}" />
				<Setter Property="BorderThickness" Value="0,2,0,0" />
				<Setter Property="Background" Value="{DynamicResource SurfaceOverlayBackground}" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding Expandable}" Value="True">
						<Setter Property="Padding" Value="24,16" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="c:Button">
				<Style.Triggers>
					<DataTrigger Binding="{Binding Expandable, ElementName=ViewModel}" Value="True">
						<Setter Property="MinWidth" Value="120" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="ShadingIcon" TargetType="c:Icon">
				<Setter Property="Size" Value="96" />
				<Setter Property="Canvas.Left" Value="-15" />
				<Setter Property="Canvas.Top" Value="-20" />
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Opacity="0.2" Color="{DynamicResource ForegroundColor}" />
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<EventTrigger RoutedEvent="Loaded">
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation
									EasingFunction="{StaticResource EaseInOutCubic}"
									Storyboard.TargetProperty="Opacity"
									From="0"
									To="1"
									Duration="00:00:02"
									/>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
				</Style.Triggers>
			</Style>
			<Style BasedOn="{StaticResource DefaultExpandButtonStyle}" TargetType="c:ExpandButton">
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="IsChecked" Value="True" />
				<Setter Property="KeyboardNavigation.AcceptsReturn" Value="False" />
				<Style.Triggers>
					<DataTrigger Binding="{Binding Expandable}" Value="False">
						<Setter Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</c:BackdropWindow.Resources>

	<c:BackdropWindow.Title>
		<Binding Path="Title" />
	</c:BackdropWindow.Title>
	<c:BackdropWindow.Icon>
		<Binding Converter="{StaticResource IconNameToImageSource}" Path="IconName" />
	</c:BackdropWindow.Icon>

	<Grid>
		<Canvas>
			<c:Icon IconName="{Binding IconName}" Style="{StaticResource ShadingIcon}" />
		</Canvas>
		<StackPanel Orientation="Vertical">
			<Border Style="{StaticResource ContentWrapper}">
				<StackPanel Orientation="Vertical">
					<TextBlock Style="{StaticResource Subtitle}" Text="{Binding Subtitle}" />
					<TextBlock Style="{StaticResource Title}" Text="{Binding Title}" />
					<TextBlock
						Style="{StaticResource Body}"
						Text="{Binding Body}"
						Visibility="{Binding CanCopyBody, Converter={StaticResource BoolToInvertVis}}"
						/>
					<Grid x:Name="BodyWrapper">
						<TextBox
							x:Name="CopyableBody"
							Style="{StaticResource CopyableBody}"
							Text="{Binding Body}"
							Visibility="{Binding CanCopyBody, Converter={StaticResource BoolToVis}}"
							/>
					</Grid>
				</StackPanel>
			</Border>
			<Border Style="{StaticResource ButtonsContainer}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition>
							<ColumnDefinition.Style>
								<Style TargetType="ColumnDefinition">
									<Setter Property="Width" Value="0" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Expandable}" Value="True">
											<Setter Property="Width" Value="*" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ColumnDefinition.Style>
						</ColumnDefinition>
						<ColumnDefinition>
							<ColumnDefinition.Style>
								<Style TargetType="ColumnDefinition">
									<Setter Property="Width" Value="*" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Expandable}" Value="True">
											<Setter Property="Width" Value="Auto" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ColumnDefinition.Style>
						</ColumnDefinition>
					</Grid.ColumnDefinitions>
					<c:ExpandButton
						x:Name="ExpandButton"
						Grid.Column="0"
						Click="ExpandButton_Click"
						/>
					<ItemsControl
						Grid.Column="1"
						Focusable="False"
						ItemsSource="{Binding Buttons}"
						>
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<c:ContentDialogButtonPanel />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<c:Button
									Command="{Binding ClickButtonCommand, ElementName=ViewModel}"
									CommandParameter="{Binding DialogResult}"
									Content="{Binding Text}"
									DialogResult="{Binding DialogResult}"
									IsDefault="{Binding IsDefault}"
									/>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
			</Border>
		</StackPanel>
	</Grid>
</c:BackdropWindow>
