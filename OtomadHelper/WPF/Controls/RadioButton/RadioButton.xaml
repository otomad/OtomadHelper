<m:CustomControlResourceDictionary
	x:Class="OtomadHelper.WPF.Controls.RadioButtonResourceDictionary"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:OtomadHelper.WPF.Controls"
	xmlns:m="clr-namespace:OtomadHelper.WPF.Common"
	xmlns:s="clr-namespace:System;assembly=mscorlib"
	>
	<Style x:Key="DefaultRadioButtonStyle" TargetType="RadioButton">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
		<Setter Property="FontSize" Value="{StaticResource BodyFontSize}" />
		<Setter Property="Margin" Value="4" />
		<EventSetter Event="MouseEnter" Handler="UpdateStates_Hover" />
		<EventSetter Event="MouseLeave" Handler="UpdateStates_Hover" />
		<EventSetter Event="PreviewMouseDown" Handler="UpdateStates_Press" />
		<EventSetter Event="PreviewMouseUp" Handler="UpdateStates_Lift" />
		<EventSetter Event="Checked" Handler="UpdateStates_Check" />
		<EventSetter Event="Unchecked" Handler="UpdateStates_Check" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="20" Height="20">
								<Ellipse
									x:Name="Border"
									Fill="{DynamicResource ControlAltSecondary}"
									Stroke="{DynamicResource ControlStrongStroke}"
									StrokeThickness="1"
									/>
								<Ellipse
									x:Name="CheckMark"
									Width="{Binding MinWidth, RelativeSource={RelativeSource Self}}"
									Height="{Binding MinWidth, RelativeSource={RelativeSource Self}}"
									MinWidth="0"
									Fill="{DynamicResource TextOnAccent}"
									Stroke="{DynamicResource CircleElevation}"
									StrokeThickness="1"
									/>
								<Ellipse
									x:Name="FocusRing"
									Visibility="Collapsed"
									Margin="-3"
									Stroke="{DynamicResource ForegroundBrush}"
									StrokeThickness="2"
									/>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter
							Margin="8,-2,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							RecognizesAccessKey="True"
							/>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition
										GeneratedDuration="{StaticResource BaseAnimationDuration}"
										GeneratedEasingFunction="{StaticResource EaseOutExpo}"
										To="UncheckedNormal"
										/>
									<VisualTransition
										GeneratedDuration="{StaticResource BaseAnimationDuration}"
										GeneratedEasingFunction="{StaticResource EaseOutExpo}"
										To="UncheckedMouseOver"
										/>
									<VisualTransition
										GeneratedDuration="{StaticResource BaseAnimationDuration}"
										GeneratedEasingFunction="{StaticResource EaseOutExpo}"
										To="UncheckedPressed"
										/>
									<VisualTransition
										GeneratedDuration="{StaticResource BaseAnimationDuration}"
										GeneratedEasingFunction="{StaticResource EaseOutExpo}"
										To="CheckedNormal"
										/>
									<VisualTransition
										GeneratedDuration="{StaticResource BaseAnimationDuration}"
										GeneratedEasingFunction="{StaticResource EaseOutExpo}"
										To="CheckedMouseOver"
										/>
									<VisualTransition
										GeneratedDuration="{StaticResource BaseAnimationDuration}"
										GeneratedEasingFunction="{StaticResource EaseOutExpo}"
										To="CheckedPressed"
										/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="UncheckedNormal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="MinWidth">
											<SplineDoubleKeyFrame KeyTime="0" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UncheckedMouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="MinWidth">
											<SplineDoubleKeyFrame KeyTime="0" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UncheckedPressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="MinWidth">
											<SplineDoubleKeyFrame KeyTime="0" Value="8" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedNormal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="MinWidth">
											<SplineDoubleKeyFrame KeyTime="0" Value="10" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedMouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="MinWidth">
											<SplineDoubleKeyFrame KeyTime="0" Value="12" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="MinWidth">
											<SplineDoubleKeyFrame KeyTime="0" Value="8" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Fill" Value="{DynamicResource ControlAltTertiary}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Border" Property="Fill" Value="{DynamicResource ControlAltQuarternary}" />
							<Setter TargetName="Border" Property="Stroke" Value="{DynamicResource ControlStrongStrokeDisabled}" />
							<Setter TargetName="CheckMark" Property="MinWidth" Value="8" />
							<Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Fill" Value="Transparent" />
							<Setter TargetName="Border" Property="Stroke" Value="{DynamicResource ControlStrongStrokeDisabled}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Border" Property="Fill" Value="{Binding WindowGlassBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=c:BackdropWindow}}" />
							<Setter TargetName="Border" Property="Stroke" Value="{Binding WindowGlassBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=c:BackdropWindow}}" />
							<Setter TargetName="CheckMark" Property="MinWidth" Value="10" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="CheckMark" Property="MinWidth" Value="12" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="CheckMark" Property="MinWidth" Value="8" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Fill" Value="{DynamicResource AccentDisabled}" />
							<Setter TargetName="Border" Property="Stroke" Value="{DynamicResource AccentDisabled}" />
						</MultiTrigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="FocusRing" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabled}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="RadioButton" />
</m:CustomControlResourceDictionary>
