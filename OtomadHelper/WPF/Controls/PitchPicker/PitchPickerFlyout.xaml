<c:BaseFlyout
	x:Class="OtomadHelper.WPF.Controls.PitchPickerFlyout"
	x:Name="View"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:OtomadHelper.WPF.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:m="clr-namespace:OtomadHelper.WPF.Common"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:s="clr-namespace:System;assembly=mscorlib"
	Width="200"
	Height="300"
	Loaded="Window_Loaded"
	PreviewKeyDown="Window_PreviewKeyDown"
	mc:Ignorable="d"
	>
	<c:BaseFlyout.DataContext>
		<c:PitchPickerViewModel x:Name="ViewModel" />
	</c:BaseFlyout.DataContext>

	<c:BaseFlyout.InputBindings>
		<KeyBinding Key="Space" Command="{Binding CloseKeyDownCommand}" />
		<KeyBinding Key="Return" Command="{Binding CloseKeyDownCommand}" />
	</c:BaseFlyout.InputBindings>

	<c:BaseFlyout.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/OtomadHelper;component/WPF/Styles/Storyboards.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<m:DoubleToCornerRadiusConverter x:Key="DoubleToRadius" />
			<m:BooleanToVisibilityConverter x:Key="BoolToVis" />
			<m:ActualSizeToRectConverter x:Key="SizeToRect" />

			<Thickness x:Key="ItemPadding">4,0</Thickness>
			<s:Double x:Key="ItemHeight">40</s:Double>
			<s:Double x:Key="ItemRadius">4</s:Double>

			<Style x:Key="ListView" TargetType="c:PitchPickerFlyoutListView">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
				<Setter Property="BorderBrush" Value="{DynamicResource DividerStroke}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
				<Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=Canvas, AncestorLevel=1}}" />
				<Setter Property="Padding" Value="0,2" />
				<Setter Property="ItemContainerStyle">
					<Setter.Value>
						<Style TargetType="ListViewItem">
							<Setter Property="HorizontalContentAlignment" Value="Center" />
							<Setter Property="Focusable" Value="False" />
							<Setter Property="Height" Value="{StaticResource ItemHeight}" />
							<Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView, AncestorLevel=1}}" />
							<Setter Property="FontSize" Value="14" />
							<Setter Property="m:MouseDownHelper.Enabled" Value="True" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ListBoxItem">
										<Border
											x:Name="ListBoxItemBorder"
											Margin="2,0"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											CornerRadius="{Binding Source={StaticResource ItemRadius}, Converter={StaticResource DoubleToRadius}}"
											SnapsToDevicePixels="true"
											>
											<ContentPresenter
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="ListBoxItemBorder" Property="Background" Value="{DynamicResource SubtleSecondary}" />
											</Trigger>
											<Trigger Property="m:MouseDownHelper.IsLeftPressed" Value="True">
												<Setter TargetName="ListBoxItemBorder" Property="Background" Value="{DynamicResource SubtleTertiary}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="SelectionBase" TargetType="Rectangle">
				<Setter Property="Fill" Value="{Binding Source={x:Static SystemParameters.WindowGlassBrush}}" />
				<Setter Property="Grid.ColumnSpan" Value="3" />
				<Setter Property="Height" Value="{StaticResource ItemHeight}" />
				<Setter Property="Margin" Value="{StaticResource ItemPadding}" />
				<Setter Property="RadiusX" Value="{StaticResource ItemRadius}" />
				<Setter Property="RadiusY" Value="{StaticResource ItemRadius}" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>
			<Style x:Key="ListViewWrapper" TargetType="Canvas">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Focusable" Value="True" />
				<Setter Property="FocusVisualStyle" Value="{DynamicResource InnerFocusVisualStyle}" />
				<EventSetter Event="PreviewMouseDown" Handler="ListViewWrapper_PreviewMouseDown" />
			</Style>
			<Style x:Key="ListViewSeparator" TargetType="Line">
				<Setter Property="Stretch" Value="Fill" />
				<Setter Property="Stroke" Value="{DynamicResource DividerStroke}" />
				<Setter Property="Y2" Value="1" />
				<Setter Property="Grid.Column" Value="1" />
			</Style>
			<Style
				x:Key="ListViewSelectionMasked"
				BasedOn="{StaticResource ListView}"
				TargetType="c:PitchPickerFlyoutListView"
				>
				<Setter Property="Foreground" Value="{DynamicResource TextOnAccentForegroundBrush}" />
				<Setter Property="IsHitTestVisible" Value="False" />
			</Style>
			<Style x:Key="ColumnGridSelectionMasked" TargetType="Grid">
				<Style.Resources>
					<Style TargetType="Border">
						<Setter Property="ClipToBounds" Value="True" />
					</Style>
				</Style.Resources>
				<Setter Property="IsHitTestVisible" Value="False" />
				<Setter Property="Visibility" Value="{Binding IsLightTheme, ElementName=View, Converter={StaticResource BoolToVis}, Mode=OneWay}" />
				<Setter Property="OpacityMask">
					<Setter.Value>
						<DrawingBrush>
							<DrawingBrush.Drawing>
								<DrawingGroup>
									<DrawingGroup.Children>
										<GeometryDrawing Brush="Transparent">
											<GeometryDrawing.Geometry>
												<RectangleGeometry Rect="0,0,1,1" />
											</GeometryDrawing.Geometry>
										</GeometryDrawing>
										<GeometryDrawing Brush="Black">
											<GeometryDrawing.Geometry>
												<RectangleGeometry Rect="{Binding SelectionMaskRect, ElementName=View}" />
											</GeometryDrawing.Geometry>
										</GeometryDrawing>
									</DrawingGroup.Children>
								</DrawingGroup>
							</DrawingBrush.Drawing>
						</DrawingBrush>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</c:BaseFlyout.Resources>

	<Grid>
		<Grid x:Name="VisibleGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="1" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Rectangle Style="{StaticResource SelectionBase}" />
			<Canvas
				x:Name="NoteNameWrapper"
				Grid.Column="0"
				PreviewMouseWheel="{m:EventBinding Command=NoteNameSpinCommand, CommandParameter=$e.Delta}"
				Style="{StaticResource ListViewWrapper}"
				>
				<c:PitchPickerFlyoutListView
					x:Name="NoteNameListView"
					d:ItemsSource="{Binding NoteNames}"
					ItemClick="{m:EventBinding Command=NoteNameChangeCommand, CommandParameter=$this.Content}"
					ItemsSource="{Binding DisplayNoteNames, ElementName=View}"
					Style="{StaticResource ListView}"
					/>
			</Canvas>
			<Line Style="{StaticResource ListViewSeparator}" />
			<Canvas
				x:Name="OctaveWrapper"
				Grid.Column="2"
				PreviewMouseWheel="{m:EventBinding Command=OctaveSpinCommand, CommandParameter=$e.Delta}"
				Style="{StaticResource ListViewWrapper}"
				>
				<c:PitchPickerFlyoutListView
					x:Name="OctaveListView"
					ItemClick="{m:EventBinding Command=OctaveChangeCommand, CommandParameter=$this.Content}"
					ItemsSource="{Binding Octaves}"
					Style="{StaticResource ListView}"
					/>
			</Canvas>
		</Grid>
		<Grid Style="{StaticResource ColumnGridSelectionMasked}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="1" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Border Grid.Column="0">
				<Canvas Style="{StaticResource ListViewWrapper}" >
					<c:PitchPickerFlyoutListView
						d:ItemsSource="{Binding NoteNames}"
						ItemsSource="{Binding DisplayNoteNames, ElementName=View}"
						Style="{StaticResource ListViewSelectionMasked}"
						Canvas.Top="{Binding (Canvas.Top), ElementName=NoteNameListView}"
						/>
				</Canvas>
			</Border>
			<Border Grid.Column="2">
				<Canvas Style="{StaticResource ListViewWrapper}" >
					<c:PitchPickerFlyoutListView
						ItemsSource="{Binding Octaves}"
						Style="{StaticResource ListViewSelectionMasked}"
						Canvas.Top="{Binding (Canvas.Top), ElementName=OctaveListView}"
					/>
				</Canvas>
			</Border>
		</Grid>
	</Grid>
</c:BaseFlyout>
