<c:BackdropWindow
	x:Class="OtomadHelper.WPF.Controls.ComboBoxFlyout"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:OtomadHelper.WPF.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:m="clr-namespace:OtomadHelper.WPF.Common"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:s="clr-namespace:System;assembly=mscorlib"
	x:Name="View"
	Width="200"
	BorderBrush="{DynamicResource CardStroke}"
	BorderThickness="1"
	Closing="Window_Closing"
	Deactivated="Window_Deactivated"
	Loaded="Window_Loaded"
	ResizeMode="NoResize"
	ShowInTaskbar="False"
	SizeToContent="Height"
	TitleBarType="WindowChromeNoTitleBar"
	WindowStartupLocation="Manual"
	mc:Ignorable="d"
	>
	<c:BackdropWindow.DataContext>
		<c:ComboBoxViewModel x:Name="ViewModel" />
	</c:BackdropWindow.DataContext>

	<c:BackdropWindow.InputBindings>
		<KeyBinding Key="Up" Command="{Binding ArrowKeyDownCommand}">
			<KeyBinding.CommandParameter>
				<s:Int32>-1</s:Int32>
			</KeyBinding.CommandParameter>
		</KeyBinding>
		<KeyBinding Key="Down" Command="{Binding ArrowKeyDownCommand}">
			<KeyBinding.CommandParameter>
				<s:Int32>1</s:Int32>
			</KeyBinding.CommandParameter>
		</KeyBinding>
		<KeyBinding Key="Return" Command="{Binding EnterKeyDownCommand}" />
	</c:BackdropWindow.InputBindings>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="KeyUp">
			<m:EventCommand Command="{Binding KeyUpCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<c:BackdropWindow.Resources>
		<BooleanToVisibilityConverter x:Key="BoolToVis" />
		<m:DoubleToThicknessConverter x:Key="DoubleToThick" />

		<s:Double x:Key="Padding">2</s:Double>
		<s:Double x:Key="IndicatorRadius">1.5</s:Double>
		<s:Double x:Key="IndicatorHeight">16</s:Double>
		<s:Double x:Key="IndicatorPressedHeight">10</s:Double>
		<Duration x:Key="IndicatorAnimationDuration">00:00:00.250</Duration>
		<ExponentialEase
			x:Key="IndicatorAnimationEasingFunction"
			EasingMode="EaseOut"
			Exponent="5"
			/>
		<SolidColorBrush x:Key="TransparentButClickable" Color="#01FFFFFF" />

		<Style x:Key="ComboBoxItemButton" TargetType="RadioButton">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
			<Setter Property="Padding" Value="0,7,12,7" />
			<Setter Property="MinHeight" Value="{Binding ItemHeight, ElementName=View}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Border Padding="{Binding Source={StaticResource Padding}, Converter={StaticResource DoubleToThick}, Mode=OneWay}" Background="{StaticResource TransparentButClickable}">
							<Border
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								CornerRadius="4"
								>
								<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
							</Border>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource FillColorSubtleSecondary}" />
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter Property="Background" Value="{DynamicResource FillColorSubtleTertiary}" />
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Opacity="{DynamicResource ControlPressedOpacity}" Color="{DynamicResource ForegroundColor}" />
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Background" Value="{DynamicResource FillColorSubtleSecondary}" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsChecked" Value="True" />
						<Condition Property="IsMouseOver" Value="True" />
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource FillColorSubtleTertiary}" />
				</MultiTrigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsChecked" Value="True" />
						<Condition Property="IsPressed" Value="True" />
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource FillColorSubtleSecondary}" />
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Opacity="{DynamicResource ControlPressedOpacity}" Color="{DynamicResource ForegroundColor}" />
						</Setter.Value>
					</Setter>
				</MultiTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="Indicator" TargetType="Rectangle">
			<Setter Property="Width" Value="3" />
			<Setter Property="Height" Value="{StaticResource IndicatorHeight}" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Fill" Value="{Binding Source={x:Static SystemParameters.WindowGlassBrush}}" />
			<Setter Property="RadiusX" Value="{StaticResource IndicatorRadius}" />
			<Setter Property="RadiusY" Value="{StaticResource IndicatorRadius}" />
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True" />
						<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True" />
					</MultiDataTrigger.Conditions>
					<MultiDataTrigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation
									EasingFunction="{StaticResource IndicatorAnimationEasingFunction}"
									Storyboard.TargetProperty="Height"
									From="{StaticResource IndicatorHeight}"
									To="{StaticResource IndicatorPressedHeight}"
									Duration="{StaticResource IndicatorAnimationDuration}"
									/>
							</Storyboard>
						</BeginStoryboard>
					</MultiDataTrigger.EnterActions>
					<MultiDataTrigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation
									EasingFunction="{StaticResource IndicatorAnimationEasingFunction}"
									Storyboard.TargetProperty="Height"
									From="{StaticResource IndicatorPressedHeight}"
									To="{StaticResource IndicatorHeight}"
									Duration="{StaticResource IndicatorAnimationDuration}"
									/>
							</Storyboard>
						</BeginStoryboard>
					</MultiDataTrigger.ExitActions>
				</MultiDataTrigger>
				<EventTrigger RoutedEvent="Loaded">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation
								EasingFunction="{StaticResource IndicatorAnimationEasingFunction}"
								FillBehavior="Stop"
								Storyboard.TargetProperty="Height"
								From="{StaticResource IndicatorPressedHeight}"
								To="{StaticResource IndicatorHeight}"
								Duration="{StaticResource IndicatorAnimationDuration}"
								/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="TextBlock">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="FontSize" Value="14" />
			<Setter Property="LineHeight" Value="20" />
		</Style>

		<Style x:Key="ItemsControlWrapper" TargetType="ItemsControl">
			<Setter Property="Padding" Value="{Binding Source={StaticResource Padding}, Converter={StaticResource DoubleToThick}, Mode=OneWay}" />
			<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Canvas, AncestorLevel=1}, Path=ActualWidth}" />
			<Setter Property="Canvas.Top" Value="-40" />
		</Style>
	</c:BackdropWindow.Resources>

	<Canvas>
		<ItemsControl
			x:Name="ItemsControlWrapper"
			ItemsSource="{Binding Items}"
			Style="{StaticResource ItemsControlWrapper}"
			>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<RadioButton
						x:Name="RadioButton"
						Command="{Binding CheckRadioButtonCommand, ElementName=ViewModel}"
						GroupName="ComboBoxItem"
						IsChecked="{Binding IsChecked, Mode=TwoWay}"
						Style="{StaticResource ComboBoxItemButton}"
						>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="12" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Rectangle
								x:Name="Indicator"
								Grid.Column="0"
								Style="{StaticResource Indicator}"
								Visibility="{Binding IsChecked, ElementName=RadioButton, Converter={StaticResource BoolToVis}}"
								/>
							<TextBlock Grid.Column="1" Text="{Binding Text}" />
						</Grid>
					</RadioButton>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</Canvas>


</c:BackdropWindow>
